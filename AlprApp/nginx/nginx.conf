worker_processes 1;

events { 
    worker_connections 1024;
}

http {

    limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens  off;

    sendfile on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;


    server{
        listen     *:80;
        # add_header Strict-Transport-Security max-age=15768000;
        server_name     192.168.99.100;
        return 301 https://$server_name$request_uri;
    }

    server {
            listen      *:443 ssl;
            server_name  192.168.99.100;
            ssl_certificate      /etc/nginx/certificate.crt;
            ssl_certificate_key   /etc/nginx/certificate.key;
            
            # ssl_protocols             TLSv1.1 TLSv1.2;
            # ssl_prefer_server_ciphers on;
            # ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
            # ssl_ecdh_curve            secp384r1;
            # ssl_session_cache         shared:SSL:10m;
            # ssl_session_tickets       off;
            # ssl_stapling              on; #ensure your cert is capable
            # ssl_stapling_verify       on; #ensure your cert is capable

            # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
            # add_header X-Frame-Options "SAMEORIGIN";
            # add_header X-Content-Type-Options nosniff;
            # proxy_hide_header  Access-Control-Allow-Origin;
            

            # add_header Access-Control-Allow-Origin: "*";



        location / {
            proxy_pass http://localhost:5001/;
        }
    }
}