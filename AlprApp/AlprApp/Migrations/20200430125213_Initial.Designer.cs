// <auto-generated />
using System;
using AlprApp.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlprApp.Migrations
{
    [DbContext(typeof(AlprAppContext))]
    [Migration("20200430125213_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlprApp.Service.Actions.CarActions+Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.CompanyActions+Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.MessageActions+Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonCarID")
                        .HasColumnType("int");

                    b.Property<int?>("PremadeMessageID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageID");

                    b.HasIndex("PersonCarID");

                    b.HasIndex("PremadeMessageID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.PersonActions+Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FristName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.PersonCarActions+PersonCar", b =>
                {
                    b.Property<int>("PersonCarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonCarID");

                    b.HasIndex("CarID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonCar");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.PremadeMessageActions+PremadeMessage", b =>
                {
                    b.Property<int>("PremadeMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PremadeMessageID");

                    b.ToTable("PremadeMessage");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.CarActions+Car", b =>
                {
                    b.HasOne("AlprApp.Service.Actions.CompanyActions+Company", "Company")
                        .WithMany("Cars")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlprApp.Service.Actions.MessageActions+Message", b =>
                {
                    b.HasOne("AlprApp.Service.Actions.PersonCarActions+PersonCar", "PersonCar")
                        .WithMany("Messages")
                        .HasForeignKey("PersonCarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlprApp.Service.Actions.PremadeMessageActions+PremadeMessage", "PremadeMessage")
                        .WithMany()
                        .HasForeignKey("PremadeMessageID");
                });

            modelBuilder.Entity("AlprApp.Service.Actions.PersonCarActions+PersonCar", b =>
                {
                    b.HasOne("AlprApp.Service.Actions.CarActions+Car", "Car")
                        .WithMany("PersonCars")
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlprApp.Service.Actions.PersonActions+Person", "Person")
                        .WithMany("PersonCar")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
